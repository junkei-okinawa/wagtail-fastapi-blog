[project]
name = "my-wagtail-fastapi-blog"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "django>=5.2.3",
    "fastapi>=0.115.12",
    "python-dotenv>=1.1.0",
    "stripe>=12.2.0",
    "uvicorn>=0.34.3",
    "wagtail>=7.0.1",
]

[dependency-groups]
dev = [
    "flake8>=7.2.0",
    "isort>=6.0.1",
    "pytest>=8.4.0",
    "ruff>=0.11.13",
    "black>=23.7.0",
    "pre-commit>=3.6.0",
]
test = [
    "pytest>=8.4.0",
    "pytest-django>=4.8.0",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.26.0",
    "pytest-cov>=4.0.0",
    "factory-boy>=3.3.0",
    "responses>=0.24.0",
    "freezegun>=1.5.0",
]
e2e = [
    "playwright>=1.40.0",
    "pytest-playwright>=0.4.3",
    "httpx>=0.26.0",
    "pytest-base-url>=2.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.0.0",
    "requests>=2.31.0",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "django_project.totonoe_template.settings.test"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = ["tests"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=fastapi_app",
    "--cov=blog",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["fastapi_app", "blog"]
omit = [
    "*/migrations/*",
    "*/tests/*", 
    "*/venv/*",
    "*/staticfiles/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
